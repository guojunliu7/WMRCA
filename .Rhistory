rt = rt[rt$IncLevel2_PSI_PF_3 != "NA", ]
rt = rt[rt$IncLevel2_PSI_PF_4 != "NA", ]
str(rt)
type="AS_A3SS_Bulk"
write.csv(rt, paste0(type,"_IncLevel1_PSI_seperated_", format(Sys.time(), "%d-%b-%Y %H.%M"),".csv"), row.names=T,na="")
group = c('IncLevel1_PSI_NT_1',
'IncLevel1_PSI_NT_2',
'IncLevel1_PSI_NT_3',
'IncLevel1_PSI_NT_4')
group_2 = c('IncLevel2_PSI_PF_1',
'IncLevel2_PSI_PF_2',
'IncLevel2_PSI_PF_3',
'IncLevel2_PSI_PF_4')
confint<-function(x,sigma=-1,alpha=0.1)
{
n<-length(x)
xb<-mean(x)
if(sigma>=0)
{
tmp<-sigma/sqrt(n)*qnorm(1-alpha/2);df<-n
}
else{
tmp<-sd(x)/sqrt(n)*qt(1-alpha/2,n-1);df<- n-1
}
data.frame(mean=xb,df=df,a=xb-tmp,b=xb+tmp)
}
index <- "NA"
####
for(i in seq_len(nrow(rt))){
threshold <- confint(as.numeric(rt[i,group]))
mean <- mean(as.numeric(rt[i,group]))
for(j in group){
if (rt[i,j]<threshold$a | rt[i,j]>threshold$b) {
# rt[i,j] <- mean
print(paste("Replacing by",mean(as.numeric(rt[i,group[group != j] ])),"for", rt[i,j]))
rt[i,j]  <- mean(as.numeric(rt[i,group[group != j] ]))
index <- append(index,i)
next
}
}
}
index_2="NA"
for(i in seq_len(nrow(rt))){
threshold <- confint(as.numeric(rt[i,group_2]))
mean <- mean(as.numeric(rt[i,group_2]))
for(j in group_2){
if (rt[i,j]<threshold$a | rt[i,j]>threshold$b) {
# rt[i,j] <- mean
print(paste("Replacing by",mean(as.numeric(rt[i,group_2[group_2 != j] ])),"for", rt[i,j]))
rt[i,j]  <- mean(as.numeric(rt[i,group_2[group_2 != j] ]))
index_2 <- append(index_2,i)
next
}
}
}
index <- index[-1]
index_2 <- index_2[-1]
write.csv(index, paste0(type,"_index_PSI_NT_replaced_by_mean", format(Sys.time(), "%d-%b-%Y %H.%M"),".csv"), row.names=T,na="")
write.csv(index_2, paste0(type,"_index_PSI_PF_replaced_by_mean", format(Sys.time(), "%d-%b-%Y %H.%M"),".csv"), row.names=T,na="")
write.csv(rt, paste0(type,"_IncLevel1_PSI_replaced_by_mean_final_", format(Sys.time(), "%d-%b-%Y %H.%M"),".csv"), row.names=T,na="")
rt <- read.csv("/Volumes/Seagate_Red/02Code/R/11GO_KEGG/Merge_GO_278genes.csv",header = T, stringsAsFactors = F)
##################################################
mycolors = c(brewer.pal(name = "Set3", n =8),
brewer.pal(name = "Set2", n = 4))
# Section: Visualization 2
library(ggplot2)
library(RColorBrewer)
library(ggsci)
library(ggthemes)
library(scales)
library(gridExtra)
library(Rmisc)
library(lattice)
library(plyr)
library(stringr)
##################################################
mycolors = c(brewer.pal(name = "Set3", n =8),
brewer.pal(name = "Set2", n = 4))
###################################################
rt$Description <- factor(rt$Description, levels = rt$Description[order(rt$order)])
rt$Description
rt$Description
a=read.csv("/Volumes/Seagate_Red/03Data/PID/CVID/05GSE72625/GSE72625_DEG.csv",header = T)
library("clusterProfiler")
library("org.Hs.eg.db")
library("DOSE")
library("ggplot2")
a=read.csv("/Volumes/Seagate_Red/03Data/PID/CVID/05GSE72625/GSE72625_DEG.csv",header = T)
gene=as.character(a[,1])
#  ACCNUM, ALIAS, ENSEMBL, ENSEMBLPROT, ENSEMBLTRANS, ENTREZID, ENZYME, EVIDENCE, EVIDENCEALL, GENENAME,
#  GO, GOALL, IPI, MAP, OMIM, ONTOLOGY, ONTOLOGYALL, PATH, PFAM, PMID, PROSITE, REFSEQ, SYMBOL, UCSCKG, UNIGENE, UNIPROT.
entrezid=bitr(gene,fromType = "ENSEMBL",toType = "ENTREZID", OrgDb = "org.Hs.eg.db", drop=TRUE)
head(entrezid)
entrezid$ENTREZID
#chunk1
pdf('G-enrich_CC.pdf', width=10,height = 5)
gene=as.character(a[,1])  # a is that object to be tested
ego_CC <- enrichGO(gene          = entrezid$ENTREZID,
OrgDb         = org.Hs.eg.db,
ont           = "CC",
pAdjustMethod = "BH",
pvalueCutoff  = 0.01,
qvalueCutoff  = 0.05)
gotable <- setReadable(ego_CC,
OrgDb = org.Hs.eg.db,
keytype ="auto")  #
ego_CC
View(ego_CC)
library(ClusterofCluster)
library(WMRCA)
library(WMRCA)
library(WMRCA)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
results_CC=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
library(WMRCA)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
result=ExecuteCNMF(mRNAexp,miRNAexp,miRNAexp,miRNAexp,miRNAexp,clusterNum=3,clusterNum,nrun=30)
result=ExecuteCNMF(mRNAexp,miRNAexp,miRNAexp,miRNAexp,miRNAexp,clusterNum=3,clusterNum=3,nrun=30)
result=ExecuteCNMF(mRNAexp,miRNAexp,miRNAexp,miRNAexp,miRNAexp,clusterNum=3,clusterNum=1,nrun=30)
result=ExecuteCNMF(mRNAexp,miRNAexp,miRNAexp,miRNAexp,miRNAexp,clusterNum=3,nrun=30)
nmf?
nmf?
?nmf
?？nmf
??nmf
library(NMF)
result=ExecuteCNMF(mRNAexp,miRNAexp,miRNAexp,miRNAexp,miRNAexp,clusterNum=3,nrun=30)
installed.packages()[,"Version"]
packageVersion("NMF")
library(roxygen2)
roxygenise()
roxygen2::roxygenize('.', roclets=c('rd', 'collate', 'namespace'))
library(WMRCA)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
library(WMRCA)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
library(WMRCA)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
loadNamespace("WMRCA")
library(pRRophetic)
loadNamespace("WMRCA")
use_gpl3_license(name = "Guojun Liu")
ls(pos = "package:WMRCA")
loadNamespace("WMRCA")
#'
#' @examples
#' data(mRNAexp)
#' data(miRNAexp)
#' data(lncRNAexp)
#' data(methylation)
#' data(CNVmatrix)
#' result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
#' result$group
#'
ExecuteCC <- function(clusterNum,
mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=10,clusterAlg="hc",
distance="pearson",title="ConsensusClusterResult",
reps=500, pItem=0.8, pFeature=1,plot="png",
innerLinkage="average", finalLinkage="average",
writeTable=FALSE,weightsItem=NULL,weightsFeature=NULL,
verbose=FALSE,corUse="everything")
{
colnames(mRNAexp)=substr(colnames(mRNAexp),1,15)
colnames(mRNAexp)=gsub("[.]","-",colnames(mRNAexp))
colnames(miRNAexp)=substr(colnames(miRNAexp),1,15)
colnames(miRNAexp)=gsub("[.]","-",colnames(miRNAexp))
colnames(lncRNAexp)=substr(colnames(lncRNAexp),1,15)
colnames(lncRNAexp)=gsub("[.]","-",colnames(lncRNAexp))
colnames(methylation)=substr(colnames(methylation),1,15)
colnames(methylation)=gsub("[.]","-",colnames(methylation))
colnames(CNVmatrix)=substr(colnames(CNVmatrix),1,15)
colnames(CNVmatrix)=gsub("[.]","-",colnames(CNVmatrix))
a=intersect(x=colnames(miRNAexp),y=colnames(mRNAexp))
b=intersect(x=colnames(lncRNAexp),y=a)
c=intersect(x=colnames(methylation),y=b)
e=intersect(x=colnames(CNVmatrix),y=c)
mRNAexp1=mRNAexp[,match(e,colnames(mRNAexp))]
miRNAexp1=miRNAexp[,match(e,colnames(miRNAexp))]
lncRNAexp1=lncRNAexp[,match(e,colnames(lncRNAexp))]
methylation1=methylation[,match(e,colnames(methylation))]
CNVmatrix1=CNVmatrix[,match(e,colnames(CNVmatrix))]
CNVmatrix1=CNVmatrix1[which(rowSums(CNVmatrix1) > 0),]
d=list(mRNAexp=mRNAexp1,miRNAexp=miRNAexp1,lncRNAexp=lncRNAexp1,methylation=methylation1,CNVmatrix=CNVmatrix1)
if(is.list(d))
{
temp=NULL
for(i in 1: length(d))
{
temp=rbind(temp,d[[i]])
}
temp=t(scale(t(temp)))
}
else
temp=d
originalResult=ConsensusClusterPlus(
temp, maxK=maxK,clusterAlg=clusterAlg,
distance=distance,title=title,
reps=reps, pItem=pItem, pFeature=pFeature,plot=plot,
innerLinkage=innerLinkage, finalLinkage=finalLinkage,
writeTable=writeTable,weightsItem=weightsItem,weightsFeature=weightsFeature,
verbose=verbose,corUse=corUse)
group=originalResult[[clusterNum]][["consensusClass"]]
distanceMatrix=originalResult[[clusterNum]][["consensusMatrix"]]
attr(distanceMatrix,'class')="Similarity"
#icl=calcICL(result,title =fileName,plot="png" )
result=list(group=group,distanceMatrix=distanceMatrix,originalResult=originalResult)
result
}
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
data(mRNAexp)
data(miRNAexp)
GBM=list(mRNAexp=mRNAexp,miRNAexp=miRNAexp)
result=ExecuteSNF(GBM, clusterNum=3, K=20, alpha=0.5, t=20)
remove.packages("CFC")
library(WMRCA)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
library(WMRCA)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
results = WMRCA(mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=6,reps=50,pItem=0.8,pFeature=1,clusterAlg="hc",distance="pearson",innerLinkage="complete",seed=1262118388.71279,plot="pdf")
#' data(mRNAexp)
#' data(miRNAexp)
#' data(lncRNAexp)
#' data(methylation)
#' data(CNVmatrix)
result=ExecuteSNF(mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix, clusterNum=3, K=20, alpha=0.5, t=20)
#' data(mRNAexp)
#' data(miRNAexp)
#' data(lncRNAexp)
#' data(methylation)
#' data(CNVmatrix)
result=ExecuteSNF(mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix, clusterNum=3, K=20, alpha=0.5, t=20)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteiCluster(mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix, k=3, lambda=list(0.44,0.33,0.28))
result$group
result=ExecuteiCluster(mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix, k=3, lambda=list(0.44,0.33,0.28))
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
library(ConsensusClusterPlus)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
library(WMRCA)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteiCluster(mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix, k=3, lambda=list(0.44,0.33,0.28))
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteSNF(mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix, clusterNum=3, K=20, alpha=0.5, t=20)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
mRNAexp=data.filter(mRNAexp,percentage=0.6)
library(WMRCA)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
mRNAexp=data.filter(mRNAexp,percentage=0.6)
miRNAexp=data.filter(miRNAexp,percentage=0.6)
lncRNAexp=data.filter(lncRNAexp,percentage=0.6)
methylation=data.filter(methylation,percentage=0.6)
CNVmatrix=data.filter(CNVmatrix,percentage=0.6)
mRNAexp[mRNAexp==0]<-NA
miRNAexp[miRNAexp==0]<-NA
lncRNAexp[lncRNAexp==0]<-NA
methylation[methylation==0]<-NA
CNVmatrix[CNVmatrix==0]<-NA
mRNAexp<-as.matrix(mRNAexp)
miRNAexp<-as.matrix(miRNAexp)
lncRNAexp<-as.matrix(lncRNAexp)
methylation<-as.matrix(methylation)
CNVmatrix<-as.matrix(CNVmatrix)
mRNAexp=data.imputation(mRNAexp,fun="mean")
miRNAexp=data.imputation(miRNAexp,fun="mean")
lncRNAexp=data.imputation(lncRNAexp,fun="mean")
methylation=data.imputation(methylation,fun="mean")
CNVmatrix=data.imputation(CNVmatrix,fun="mean")
results = WMRCA(mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=6,reps=50,pItem=0.8,pFeature=1,clusterAlg="hc",distance="pearson",innerLinkage="complete",seed=1262118388.71279,plot="pdf")
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteSNF(mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix, clusterNum=3, K=20, alpha=0.5, t=20)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteSNF(mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix, clusterNum=3, K=20, alpha=0.5, t=20)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
library(WMRCA)
data(mRNAexp)
data(miRNAexp)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteSNF(mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix, clusterNum=3, K=20, alpha=0.5, t=20)
result$group
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
library(WMRCA)
require(WMRCA)
install.packages("/Users/apple/Manuscripts/WMRCA")
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
results = WMRCA(mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=6,reps=50,pItem=0.8,pFeature=1,clusterAlg="hc",distance="pearson",innerLinkage="complete",seed=1262118388.71279,plot="pdf")
result=ExecuteSNF(mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix, clusterNum=3, K=20, alpha=0.5, t=20)
result=ExecuteCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
??ExecuteCC
library(roxygen2)
roxygenise()  # 生成帮助文档
roxygen2::roxygenize('.', roclets=c('rd', 'collate', 'namespace'))
roxygen2::roxygenize(clean=TRUE) #此命令首先清除所有内容、NAMESPACE 和Rd文件，然后生成 NAMESPACE 和Rd文件。
devtools::document()
library(WMRCA)
data(mRNAexp)
data(miRNAexp)
data(lncRNAexp)
data(methylation)
data(CNVmatrix)
result=runCC(clusterNum=3,mRNAexp,miRNAexp,lncRNAexp,methylation,CNVmatrix,maxK=5,clusterAlg="hc",distance="pearson")
devtools::check()
library(devtools)
use_package("inpute")
data(lncRNAexp)
install.packages("inpute")
install.packages("~/Downloads/impute_1.26.0.tar", repos = NULL)
install.packages("~/Downloads/impute_1.26.0.tar", type = "binary")
###################################################################
## Script name: 3.4 Similarity network fusion for cancer subtype identification
# Similarity network fusion (SNF, 2014) is a computational method on fusion similarity network for aggregating multi-omics data.
###################################################################
data(GeneExp)
###################################################################
## Script name: 3.4 Similarity network fusion for cancer subtype identification
# Similarity network fusion (SNF, 2014) is a computational method on fusion similarity network for aggregating multi-omics data.
###################################################################
data(GeneExp)
data(miRNAExp)
###################################################################
## Script name: 3.4 Similarity network fusion for cancer subtype identification
# Similarity network fusion (SNF, 2014) is a computational method on fusion similarity network for aggregating multi-omics data.
###################################################################
data(GeneExp)
data(miRNAExp)
GBM=list(GeneExp=GeneExp,miRNAExp=miRNAExp)
###################################################################
## Script name: 3.5 Ensemble method of SNF and CC for cancer subtype identification
###################################################################
data(GeneExp)
data(miRNAExp)
data(time)
data(status)
library(CancerSubtypes)
###################################################################
## Script name: 3.3 Integrative clustering for cancer subtype identification
# Integrative clustering (iCluster, 2009) used a joint latent variable model for integrative clustering for multiple types of omics data.
###################################################################
data(GeneExp)
data(miRNAExp)
data1=FSbyVar(GeneExp, cut.type="topk",value=1000)
###################################################################
## Script name: 3.3 Integrative clustering for cancer subtype identification
# Integrative clustering (iCluster, 2009) used a joint latent variable model for integrative clustering for multiple types of omics data.
###################################################################
data(GeneExp)
data(miRNAExp)
data1=FSbyVar(GeneExp, cut.type="topk",value=1000)
data2=FSbyVar(miRNAExp, cut.type="topk",value=300)
GBM=list(GeneExp=data1,miRNAExp=data2)
library(WMRCA)
library(WMRCA)
# 设置工作目录为包含.rda文件的文件夹
setwd("/Users/apple/Manuscripts/WMRCA/data")
# 列出当前目录下所有的 .rda 文件
rda_files <- list.files(pattern = "\\.rda$")
# 遍历所有的 .rda 文件
for (file in rda_files) {
# 加载 .rda 文件
load(file)
# 从文件名中获取对象名称
obj_name <- sub("\\.rda$", "", file)
# 保存为 .rds 文件，可以选择是否压缩
saveRDS(get(obj_name), file = paste0(obj_name, ".rds"), compress = "gzip")
# 如果需要，打印正在处理的文件名
print(paste("Converted", file, "to", obj_name, ".rds"))
}
??runCC
??runCC
??WMRCA
??runCC
??WMRCA::runCNMF
??WMRCA::Surplot
Sys.getenv("HOME")
Sys.getenv("USERPROFILE")
git --version
options(prompt = "Command executed: ")
